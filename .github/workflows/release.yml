name: CD

on: 
  push:
    branches: [ master ]

jobs:
  build:
    name: "Build and release"
    runs-on: windows-latest

    steps:
      - name: "Checkout Master Branch"
        uses: actions/checkout@v2

      - name: Setup MSbuild
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Compile  
        working-directory: src/Ladybug.Grasshopper
        run: |
          dotnet restore
          msbuild /p:Configuration=Release /restore
          ls bin -R

      - name: Zip Build Artifact
        run: |
          Compress-Archive -U -Path src\Ladybug.Grasshopper\bin\net45\* -DestinationPath LadybugGrasshopper
          ls

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v2
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release to PyPI
        run: |
          python -m pip install twine==3.2.0 setuptools wheel
          
          # gha file is src\Ladybug.Grasshopper\bin\net45\*.gha
          mkdir ladybug_grasshopper_dotnet
          cp src\Ladybug.Grasshopper\bin\net45\*.gha .\ladybug_grasshopper_dotnet\
          echo ""  > .\ladybug_grasshopper_dotnet\__init__.py
          ls .\ladybug_grasshopper_dotnet\

          echo "Building distribution"
          python setup.py sdist bdist_wheel
          echo "Pushing new version to PyPi"
          twine upload dist/* -u ${{ secrets.PYPI_USERNAME }} -p ${{ secrets.PYPI_PASSWORD }}
    outputs:
      tag: ${{ steps.semantic.outputs.new_release_version  }}

  deploy:
    name: Deploy to Dependent Repos
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.ref == 'refs/heads/master' && github.repository_owner == 'ladybug-tools' && contains(needs.build.outputs.tag, '.') }}
    steps:
      - name: Update lbt-grasshopper
        env:
          DISPATCH_REPO: ladybug-tools/lbt-grasshopper
          DEPS_TOKEN: ${{ secrets.DEPS_UPDATING }}
        run: |
          curl -X POST https://api.github.com/repos/$DISPATCH_REPO/dispatches \
          -H "Accept: application/vnd.github.everest-preview+json" \
          -d '{"event_type": "ladybug_grasshopper_release", "client_payload": {"version": "${{ needs.build.outputs.tag }}"}}' \
          -u ladybugbot:$DEPS_TOKEN
